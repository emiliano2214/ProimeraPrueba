@page "/modificarproducto"
@rendermode @(new InteractiveWebAssemblyRenderMode(prerender:false))
<PageTitle>Modificar Producto</PageTitle>
@using SecretNight.Entities.Data
@using SecretNight.Entities.Models
@using System.Net.Http
@using System.Net.Http.Headers
@inject IHttpClientFactory http

<h3>Modificar Producto</h3>
<br />
<EditForm Model="producto" OnSubmit="Buscar">
    <div class="form-group row">
        <label for="id_producto" class="col-md-2 col-form-label">Ingrese el ID Producto:</label>
        <div class="col-md-4">
            <InputNumber id="id_producto" class="form-control" @bind-Value="productoid" />
        </div>
    </div>
    <br />
    <div>
        <button class="col-md-2 btn btn-primary" type="submit">Buscar Producto</button>
        <button class="col-md-2 btn btn-danger" type="reset" @onclick="Ocultar">Resetear Operación</button>
    </div>
</EditForm>
<div class="alert alert-warning @AlertCSS" role="alert">
    Error el producto buscado no existe!!
</div>
<div class="alert alert-success @SuccessCSS" role="alert">
    El producto ha sido modificado exitosamente!!
</div>
<div class="alert alert-danger @ErrorCSS" role="alert">
    Hubo un error al intentar modificar el producto!!
</div>
<br />
<div class="container mt-4">
    @if (showCard)
    {
        <div class="card mt-3 shadow-sm">
            <div class="card-body">
                <div class="row">
                    <div class="col-md-3">
                        <div class="square-image-container mb-3">
                            <img src="/images/producto.png" alt="Foto del producto" class="img-fluid rounded">
                        </div>
                    </div>
                    <div class="col-md-9">
                        <h5 class="card-title">Información del Producto</h5>
                        <div class="row">
                            <EditForm Model="producto">
                                <DataAnnotationsValidator />
                                <p><strong>ID: </strong> @producto.IdProductos</p>
                                <div class="form-group row">
                                    <label for="nombre" class="col-md-3 col-form-label">Nombre:</label>
                                    <div class="col-md-5">
                                        <InputText id="nombre" class="form-control" @bind-Value="producto.Nombre" />
                                        <ValidationMessage For="@(() => producto.Nombre)" />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="precio" class="col-md-3 col-form-label">Precio:</label>
                                    <div class="col-md-5">
                                        <InputNumber id="precio" class="form-control" @bind-Value="producto.Precio" />
                                        <ValidationMessage For="@(() => producto.Precio)" />
                                    </div>
                                </div>
                                <div class="form-group row">
                                    <label for="descripcion" class="col-md-3 col-form-label">Descripción:</label>
                                    <div class="col-md-5">
                                        <InputText id="descripcion" class="form-control" @bind-Value="producto.Talle" />
                                        <ValidationMessage For="@(() => producto.Talle)" />
                                    </div>
                                </div>
                                
                            </EditForm>
                        </div>
                        <br />
                        <button class="col-md-4 btn btn-info text-white" @onclick="Modificar">Confirma Modificar</button>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@code {
    public Producto producto { get; set; } = new();
    private const string URL_SEARCH = "https://localhost:7074/api/Producto";
    private const string URL_PUT = "https://localhost:7074/api/Producto";
    private int productoid;
    private string AlertCSS = "oculto";
    private string SuccessCSS = "oculto";
    private string ErrorCSS = "oculto";
    private bool showCard = false;

    protected override void OnInitialized()
    {
        base.OnInitialized();
        this.productoid = 0;
    }

    public async Task Buscar()
    {
        using (var httpClient = http.CreateClient())
        {
            using (var request = new HttpRequestMessage())
            {
                request.Method = HttpMethod.Get;
                request.RequestUri = new Uri($"{URL_SEARCH}?id={productoid}");
                request.Headers.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
                var result = await httpClient.SendAsync(request);
                if (result.IsSuccessStatusCode)
                {
                    var aux = await result.Content.ReadFromJsonAsync<Producto>();
                    if (aux is not null)
                    {
                        producto = aux;
                        if (!showCard) showCard = true;
                        AlertCSS = "oculto";
                    }
                }
                else
                {
                    showCard = false;
                    AlertCSS = "visible";
                }
            }
        }
    }

    public async Task Modificar()
    {
        using (var httpClient = http.CreateClient())
        {
            var result = await httpClient.PutAsJsonAsync(URL_PUT, producto);
            if (result.IsSuccessStatusCode)
            {
                showCard = false;
                SuccessCSS = "visible";
            }
            else
            {
                showCard = false;
                ErrorCSS = "visible";
            }
        }
    }

    private void Ocultar()
    {
        AlertCSS = "oculto";
        SuccessCSS = "oculto";
        ErrorCSS = "oculto";
        showCard = false;
    }
}
